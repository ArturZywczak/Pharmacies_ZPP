@using Microsoft.AspNetCore.Identity


@inject SignInManager<Pharmacies.Server.Data.ApplicationUser> SignInManager
@inject UserManager<Pharmacies.Server.Data.ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        if (User.IsInRole("Admin"))
        {
            <li class="nav-item">
                <a id="dashboard" class="nav-link text-light" href="/dashboard" title="Dashboard">Dashboard</a>
            </li>
        }
        if (User.IsInRole("VerifiedUser"))
        {
            <li class="nav-item">
                <a id="mypharmacies" class="nav-link text-light" href="/mypharmacies" title="My Pharmacies">My Pharmacies</a>
            </li>
        }
        <li class="nav-item">
            <a id="manage" class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-light">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
